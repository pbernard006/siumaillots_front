import Head from 'next/head'
import React from 'react'
import { Josefin_Sans } from '@next/font/google'
import Header from '../components/Header'
import { Card } from '../components/Card'
import { useEffect, useState } from 'react'
import { Jersey } from '../models/Jersey'
import { useRouter } from 'next/router'
import { Team } from '../models/Team'

const josefinSans = Josefin_Sans({
  subsets: ['latin'],
  weight: ['300'],
  display: 'swap',
})

export default function Maillots() {
  const [jerseysList, setJerseysList] = useState<Jersey[]>([])
  const [teamsList, setTeamsList] = useState<Team[]>([])
  const [isTeamsLoading, setIsTeamsLoading] = useState(true)
  const [isJerseysLoading, setIsJerseysLoading] = useState(true)

  const { asPath } = useRouter()
  let id = asPath.split('id=')[1]
  let isCountry = asPath.split('pays=')[1] ? true : false
  let search = asPath.split('search=')[1]
  const competition = {
    competitionId: id,
  }

  const getJerseysByCompetition = async () => {
    const response = await fetch(
      process.env.NEXT_PUBLIC_API_HOST + '/competition/jersey',
      {
        method: 'POST',
        body: JSON.stringify(competition),
      },
    )
    const dt = await response.json()
    setJerseysList(dt)
    setIsJerseysLoading(false)
  }

  const getTeamsByCompetition = async () => {
    const response = await fetch(
      process.env.NEXT_PUBLIC_API_HOST + '/competition/team',
      {
        method: 'POST',
        body: JSON.stringify(competition),
      },
    )
    const dt = await response.json()
    setTeamsList(dt)
    setIsTeamsLoading(false)
  }

  const onChange = (event: any) => {
    const teamId = event.target.value
    teamId ? getJerseysByTeams(teamId) : getJerseysByCompetition()
  }

  const getJerseysByTeams = async (teamId: string) => {
    const team = {
      teamId: teamId,
    }
    const response = await fetch(
      process.env.NEXT_PUBLIC_API_HOST + '/team/jersey',
      {
        method: 'POST',
        body: JSON.stringify(team),
      },
    )
    const dt = await response.json()
    setJerseysList(dt)
  }

  const getJerseysBySearch = async (searchValue: string) => {
    const search = {
      search: searchValue,
    }
    const response = await fetch(
      process.env.NEXT_PUBLIC_API_HOST + '/search/jersey',
      {
        method: 'POST',
        body: JSON.stringify(search),
      },
    )
    const dt = await response.json()
    setJerseysList(dt)
    setIsJerseysLoading(false)
  }

  if (search) {
    getJerseysBySearch(search)
  }

  useEffect(() => {
    if (!search) {
      if (isCountry) {
        getJerseysByTeams(id)
      }
      getJerseysByCompetition()
      getTeamsByCompetition()
    }
  }, [])

  return (
    <>
      <Head>
        <title>SIUMAIILOTS</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={josefinSans.className}>
        <Header />
        {!isTeamsLoading && !isCountry && !search && (
          <div className="ml-2.5 my-5">
            <select
              className="border-solid border-2 border-black ml-20 rounded-lg"
              name="teams"
              id="teams"
              onChange={onChange}
            >
              <option value="">-- Vous pouvez filtrer par équipe --</option>
              {teamsList.map((team, index) => (
                <option key={index} value={team.id}>
                  {team.name}
                </option>
              ))}
            </select>
          </div>
        )}

        {!isJerseysLoading && jerseysList &&(
          <div className="grid grid-cols-5 gap-y-5 ml-20 justify-around text-center">
            {jerseysList.map((jersey, index) => (
              <Card
                key={index}
                id={jersey.id}
                title={jersey.name}
                srcImage={process.env.NEXT_PUBLIC_API_HOST + jersey.filePath}
                price={jersey.price}
              />
            ))}
          </div>
        )}

        {!isJerseysLoading && jerseysList.length == 0 &&(
          <div className="mt-20 text-center mx-auto">
            <p>Nous sommes désolé, aucun siu maillot ne correspond à votre recherche.</p>
          </div>
        )}
      </main>
    </>
  )
}
