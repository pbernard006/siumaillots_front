import Head from "next/head"
import React from "react";
import { Josefin_Sans } from "@next/font/google";
import Header from "../components/Header";
import { Card } from "../components/Card";
import { useEffect, useState } from "react";
import { Jersey } from "../models/Jersey";

const josefinSans = Josefin_Sans({
    subsets: ['latin'],
    weight: ['300'],
    display: 'swap'
});

const elemPrefix = "Maillot";
const getId = (index: number) => `${elemPrefix}${index}`;
const getItems = () =>
  Array(20)
    .fill(0)
    .map((_, ind) => ({ id: getId(ind) }));

export default function Maillots(){

    const [jerseysList,setJerseysList] = useState<Jersey[]>([]);
    const [isLoading,setIsLoading] = useState(true);


    const getAllJerseys = async () => {
        const response = await fetch(process.env.NEXT_PUBLIC_API_HOST + "/jerseys", {
          method: "GET",
        });
        const dt = await response.json();

        let jerseys = [];
        for(let i=0; i<dt["hydra:member"].length; i++){
            let jersey = {
                id: dt["hydra:member"][i].id,
                team_id: dt["hydra:member"][i].team_id,
                year: dt["hydra:member"][i].year,
                model: dt["hydra:member"][i].model,
                name: dt["hydra:member"][i].name,
                price: dt["hydra:member"][i].price,
                filePath: dt["hydra:member"][i].filePath
            }
            jerseys.push(jersey);      
        }

        setJerseysList(jerseys);  
        setIsLoading(false);
    };
    
    useEffect(() => {
    getAllJerseys();
    }, []);


    return (
        <>
        <Head>
            <title>SIUMAIILOTS</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="icon" href="/favicon.ico" />
        </Head>
        <main className={josefinSans.className}>
            <Header/>
            <div className="ml-2.5 my-5">
                <select className="border-solid border-2 border-black ml-20 rounded-lg" name="teams" id="teams">
                    <option value="">-- Vous pouvez filtrer par Ã©quipe --</option>
                    <option value="om">OM</option>
                    <option value="psg">PSG</option>
                    <option value="ol">OL</option>
                </select>
            </div>

            {!isLoading && (
                <div className="grid grid-cols-5 gap-y-5 ml-20 justify-around text-center">
                    {jerseysList.map((jersey) => (
                        <Card
                        id={jersey.id}
                        title={jersey.name}
                        srcImage={process.env.NEXT_PUBLIC_API_HOST + jersey.filePath}
                        price={jersey.price}
                        />
                    ))}
                </div>
            )}
        </main>
        </>
    )
}